plugins {
    id "fabric-loom" version "1.10-SNAPSHOT"
    id "maven-publish"
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.
    maven {
        url "https://maven.aliyun.com/nexus/content/groups/public"
    }
    maven {
        url "https://repository.hanbings.io/proxy"
    }
    maven {
        url "https://maven.shedaniel.me/"
    }
    maven {
        url "https://maven.terraformersmc.com/releases/"
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    implementation("com.openai:openai-java:1.6.0")
    modApi("me.shedaniel.cloth:cloth-config-fabric:11.1.136") {
        exclude group: "net.fabricmc.fabric-api"
    }
    modApi "com.terraformersmc:modmenu:7.2.2"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": inputs.properties.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

jar {
    inputs.property "archivesName", project.base.archivesName

    from {
        configurations.runtimeClasspath.resolvedConfiguration
                .lenientConfiguration
                .getArtifacts()
                .findAll {
                    it.id.componentIdentifier.group.startsWith("com.openai")
                            || it.id.componentIdentifier.group.startsWith("com.squareup")
                            || it.id.componentIdentifier.group.startsWith("com.fasterxml.jackson")
                            || it.id.componentIdentifier.group.startsWith("org.apache.httpcomponents")
                }
                .collect {
                    it.file.isDirectory() ? it.file : zipTree(it.file)
                }
    }

    duplicatesStrategy = DuplicatesStrategy.INCLUDE
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
